// <auto-generated />
using System;
using AutoPartsShop.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutoPartsShop.Infrastructure.Migrations
{
    [DbContext(typeof(AutoShopDbContext))]
    [Migration("20241111194754_SeedInitialData")]
    partial class SeedInitialData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AutoPartsShop.Infrastructure.Database.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("EngineCapacity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Vin")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("nvarchar(17)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EngineCapacity = 2.0m,
                            Image = "",
                            Make = "Audi",
                            Model = "A4",
                            Vin = "WAUZZZ8K4AA123456",
                            Year = 2020
                        },
                        new
                        {
                            Id = 2,
                            EngineCapacity = 2.0m,
                            Image = "",
                            Make = "BMW",
                            Model = "3 Series",
                            Vin = "WBAVB33506KV12345",
                            Year = 2019
                        },
                        new
                        {
                            Id = 3,
                            EngineCapacity = 1.8m,
                            Image = "",
                            Make = "Mercedes",
                            Model = "C-Class",
                            Vin = "WDDGF81X98F123456",
                            Year = 2021
                        },
                        new
                        {
                            Id = 4,
                            EngineCapacity = 1.6m,
                            Image = "",
                            Make = "Volkswagen",
                            Model = "Golf",
                            Vin = "WVWZZZ1KZBW123456",
                            Year = 2018
                        },
                        new
                        {
                            Id = 5,
                            EngineCapacity = 1.4m,
                            Image = "",
                            Make = "Skoda",
                            Model = "Octavia",
                            Vin = "TMBJK73T0A0123456",
                            Year = 2022
                        });
                });

            modelBuilder.Entity("AutoPartsShop.Infrastructure.Database.Models.CarPart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("PartId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("PartId");

                    b.ToTable("CarParts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarId = 1,
                            PartId = 1
                        },
                        new
                        {
                            Id = 2,
                            CarId = 2,
                            PartId = 2
                        },
                        new
                        {
                            Id = 3,
                            CarId = 3,
                            PartId = 3
                        },
                        new
                        {
                            Id = 4,
                            CarId = 4,
                            PartId = 4
                        },
                        new
                        {
                            Id = 5,
                            CarId = 1,
                            PartId = 5
                        },
                        new
                        {
                            Id = 6,
                            CarId = 2,
                            PartId = 6
                        },
                        new
                        {
                            Id = 7,
                            CarId = 3,
                            PartId = 7
                        });
                });

            modelBuilder.Entity("AutoPartsShop.Infrastructure.Database.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Engine"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Brakes"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Suspension"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Filters"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Oils"
                        });
                });

            modelBuilder.Entity("AutoPartsShop.Infrastructure.Database.Models.Part", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("AverageRating")
                        .HasColumnType("float");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImageFileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PartNumber")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Parts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AverageRating = 4.5,
                            CategoryId = 4,
                            Description = "",
                            ImageFileName = "",
                            Manufacturer = "MANN",
                            Name = "Air Filter",
                            PartNumber = "AF123",
                            Price = 20.5m,
                            Stock = 5
                        },
                        new
                        {
                            Id = 2,
                            AverageRating = 4.2000000000000002,
                            CategoryId = 4,
                            Description = "",
                            ImageFileName = "",
                            Manufacturer = "MANN",
                            Name = "Fuel Filter",
                            PartNumber = "FF123",
                            Price = 15.0m,
                            Stock = 4
                        },
                        new
                        {
                            Id = 3,
                            AverageRating = 4.0,
                            CategoryId = 4,
                            Description = "",
                            ImageFileName = "",
                            Manufacturer = "MANN",
                            Name = "Oil Filter",
                            PartNumber = "OF123",
                            Price = 10.0m,
                            Stock = 3
                        },
                        new
                        {
                            Id = 4,
                            AverageRating = 4.5999999999999996,
                            CategoryId = 3,
                            Description = "",
                            ImageFileName = "",
                            Manufacturer = "SuspensionPro",
                            Name = "Control Arm",
                            PartNumber = "CA123",
                            Price = 120.0m,
                            Stock = 20
                        },
                        new
                        {
                            Id = 5,
                            AverageRating = 4.2999999999999998,
                            CategoryId = 2,
                            Description = "",
                            ImageFileName = "",
                            Manufacturer = "BrakeKing",
                            Name = "Brake Pads",
                            PartNumber = "BP123",
                            Price = 60.0m,
                            Stock = 45
                        },
                        new
                        {
                            Id = 6,
                            AverageRating = 4.4000000000000004,
                            CategoryId = 2,
                            Description = "",
                            ImageFileName = "",
                            Manufacturer = "BrakeKing",
                            Name = "Brake Discs",
                            PartNumber = "BD123",
                            Price = 85.0m,
                            Stock = 30
                        },
                        new
                        {
                            Id = 7,
                            AverageRating = 4.5,
                            CategoryId = 1,
                            Description = "",
                            ImageFileName = "",
                            Manufacturer = "EngineTech",
                            Name = "Piston",
                            PartNumber = "PI123",
                            Price = 220.0m,
                            Stock = 15
                        });
                });

            modelBuilder.Entity("AutoPartsShop.Infrastructure.Database.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductNumber")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 5,
                            Description = "High quality engine oil for better performance.",
                            Image = "",
                            Manufacturer = "Castrol",
                            Name = "Engine Oil 5W-30",
                            Price = 45.0m,
                            ProductNumber = "EO530",
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 5,
                            Description = "Special transmission oil for smoother shifting.",
                            Image = "",
                            Manufacturer = "Castrol",
                            Name = "Transmission Oil",
                            Price = 55.0m,
                            ProductNumber = "TO123",
                            StockQuantity = 8
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 5,
                            Description = "Hydraulic oil for industrial machinery.",
                            Image = "",
                            Manufacturer = "Castrol",
                            Name = "Hydraulic Oil",
                            Price = 30.0m,
                            ProductNumber = "HO123",
                            StockQuantity = 7
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("AutoPartsShop.Infrastructure.Database.Models.CarPart", b =>
                {
                    b.HasOne("AutoPartsShop.Infrastructure.Database.Models.Car", "Car")
                        .WithMany("CarParts")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoPartsShop.Infrastructure.Database.Models.Part", "Part")
                        .WithMany()
                        .HasForeignKey("PartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Part");
                });

            modelBuilder.Entity("AutoPartsShop.Infrastructure.Database.Models.Part", b =>
                {
                    b.HasOne("AutoPartsShop.Infrastructure.Database.Models.Category", "Category")
                        .WithMany("Parts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("AutoPartsShop.Infrastructure.Database.Models.Product", b =>
                {
                    b.HasOne("AutoPartsShop.Infrastructure.Database.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AutoPartsShop.Infrastructure.Database.Models.Car", b =>
                {
                    b.Navigation("CarParts");
                });

            modelBuilder.Entity("AutoPartsShop.Infrastructure.Database.Models.Category", b =>
                {
                    b.Navigation("Parts");

                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
